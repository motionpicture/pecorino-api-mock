---
swagger: "2.0"
info:
  description: "Pecorino口座サービスが提供するAPIは、口座管理を行うアプリケーションに有用なインターフェースを提供します。"
  version: "1.0.0"
  title: "Pecorino口座サービス"
  termsOfService: "http://motionpicture.jp"
  contact:
    email: "yamazaki@motionpicture.jp"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "pecorino-api-mock.azurewebsites.net"
basePath: "/"
tags:
- name: "口座エンドポイント"
  description: "口座を管理するエンドポイントです。"
- name: "入金取引エンドポイント"
  description: "入金取引を管理するエンドポイントです。"
- name: "出金取引エンドポイント"
  description: "出金取引を管理するエンドポイントです。"
- name: "転送取引エンドポイント"
  description: "転送取引を管理するエンドポイントです。"
schemes:
- "https"
- "http"
paths:
  /accounts:
    get:
      tags:
      - "口座エンドポイント"
      summary: "口座検索"
      description: "口座検索"
      operationId: "searchAccounts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        400:
          description: "パラメータ不適切"
      x-swagger-router-controller: "Account"
    post:
      tags:
      - "口座エンドポイント"
      summary: "口座開設"
      description: "口座開設"
      operationId: "openAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "口座開設設定"
        description: "口座番号と口座名義を指定します。Pecorinoサービス内(ひとつのPecorinoAPIエンドポイント)でユニークとな\
          るように指定側で管理すること。 重複すればステータスコード409が返されます。"
        required: true
        schema:
          $ref: "#/definitions/OpenAccountParams"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        400:
          description: "パラメータ不適切"
        409:
          description: "口座番号重複"
      security:
      - adminAuth: []
      x-swagger-router-controller: "Account"
  /accounts/{accountNumber}/close:
    put:
      tags:
      - "口座エンドポイント"
      summary: "口座解約"
      description: "口座解約"
      operationId: "closeAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountNumber"
        in: "path"
        description: "口座番号"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        404:
          description: "口座存在なし"
      security:
      - adminAuth: []
      x-swagger-router-controller: "Account"
  /accounts/{accountNumber}/actions/moneyTransfer:
    get:
      tags:
      - "口座エンドポイント"
      summary: "口座取引履歴検索"
      description: "口座取引履歴検索"
      operationId: "searchMoneyTransferActions"
      produces:
      - "application/json"
      parameters:
      - name: "accountNumber"
        in: "path"
        description: "口座番号"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MoneyTransferAction"
      security:
      - adminAuth: []
      x-swagger-router-controller: "Account"
  /transactions/deposit/start:
    post:
      tags:
      - "入金取引エンドポイント"
      summary: "入金取引開始"
      description: "取引を開始します。取引の期限が切れると取引を確定することはできなくなります。 アプリケーション側で十分な期間を想定し、期限を\
        セットしてください。"
      operationId: "startDepositTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StartDepositTransactionParams"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DepositTransaction"
      security:
      - adminAuth: []
      x-swagger-router-controller: "DepositTransaction"
  /transactions/deposit/{transactionId}/confirm:
    put:
      tags:
      - "入金取引エンドポイント"
      summary: "入金取引確定"
      description: "取引を確定します。有効期限を超過していた場合、ステータスコード400を返却します。"
      operationId: "confirmDepositTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "DepositTransaction"
  /transactions/deposit/{transactionId}/cancel:
    put:
      tags:
      - "入金取引エンドポイント"
      summary: "入金取引中止"
      description: "取引を中止します。すでに確定済の場合、ステータスコード400を返却します。"
      operationId: "cancelDepositTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "DepositTransaction"
  /transactions/withdraw/start:
    post:
      tags:
      - "出金取引エンドポイント"
      summary: "出金取引開始"
      description: "取引を開始します。取引の期限が切れると取引を確定することはできなくなります。 アプリケーション側で十分な期間を想定し、期限を\
        セットしてください。"
      operationId: "startWithdrawTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StartWithdrawTransactionParams"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WithdrawTransaction"
      security:
      - adminAuth: []
      x-swagger-router-controller: "WithdrawTransaction"
  /transactions/withdraw/{transactionId}/confirm:
    put:
      tags:
      - "出金取引エンドポイント"
      summary: "出金取引確定"
      description: "取引を確定します。有効期限を超過していた場合、ステータスコード400を返却します。"
      operationId: "confirmWithdrawTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "WithdrawTransaction"
  /transactions/withdraw/{transactionId}/cancel:
    put:
      tags:
      - "出金取引エンドポイント"
      summary: "出金取引中止"
      description: "取引を中止します。すでに確定済の場合、ステータスコード400を返却します。"
      operationId: "cancelWithdrawTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "WithdrawTransaction"
  /transactions/transfer/start:
    post:
      tags:
      - "転送取引エンドポイント"
      summary: "転送取引開始"
      description: "取引を開始します。取引の期限が切れると取引を確定することはできなくなります。 アプリケーション側で十分な期間を想定し、期限を\
        セットしてください。"
      operationId: "startTransferTransaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StartTransferTransactionParams"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransferTransaction"
      security:
      - adminAuth: []
      x-swagger-router-controller: "TransferTransaction"
  /transactions/transfer/{transactionId}/confirm:
    put:
      tags:
      - "転送取引エンドポイント"
      summary: "転送取引確定"
      description: "取引を確定します。有効期限を超過していた場合、ステータスコード400を返却します。"
      operationId: "confirmTransferTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "TransferTransaction"
  /transactions/transfer/{transactionId}/cancel:
    put:
      tags:
      - "転送取引エンドポイント"
      summary: "転送取引中止"
      description: "取引を中止します。すでに確定済の場合、ステータスコード400を返却します。"
      operationId: "cancelTransferTransaction"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Bad Request"
      x-swagger-router-controller: "TransferTransaction"
securityDefinitions:
  adminAuth:
    type: "oauth2"
    tokenUrl: "https://pecorino-admin-development.auth.ap-northeast-1.amazoncognito.com/oauth2/token"
    flow: "application"
definitions:
  Account:
    type: "object"
    properties:
      accountNumber:
        type: "string"
        description: "口座番号"
      name:
        type: "string"
        description: "口座名義"
      balance:
        type: "integer"
        description: "残高"
      availableBalance:
        type: "integer"
        description: "利用可能残高"
    description: "口座"
    example:
      balance: 0
      name: "name"
      accountNumber: "accountNumber"
      availableBalance: 6
  OpenAccountParams:
    type: "object"
    properties:
      accountNumber:
        type: "string"
        description: "口座番号"
      name:
        type: "string"
        description: "口座名義"
    example:
      name: "name"
      accountNumber: "accountNumber"
  TransactionStatus:
    type: "string"
    description: "取引状況"
    enum:
    - "InProgress"
    - "Canceled"
    - "Confirmed"
    - "Expired"
  TransactionAgent:
    type: "object"
    properties:
      typeOf:
        type: "string"
        description: "進行人タイプ"
      id:
        type: "string"
        description: "進行人ID"
      name:
        type: "string"
        description: "進行人名"
      url:
        type: "string"
        description: "進行人URL"
    description: "取引進行人"
    example:
      name: "name"
      id: "id"
      typeOf: "typeOf"
      url: "url"
  TransactionRecipient:
    type: "object"
    properties:
      typeOf:
        type: "string"
        description: "受取人タイプ"
      id:
        type: "string"
        description: "受取人ID"
      name:
        type: "string"
        description: "受取人名"
      url:
        type: "string"
        description: "受取人URL"
    description: "取引受取人"
    example:
      name: "name"
      id: "id"
      typeOf: "typeOf"
      url: "url"
  StartDepositTransactionParams:
    type: "object"
    properties:
      toAccountNumber:
        type: "string"
        description: "入金先口座番号"
      expires:
        type: "string"
        format: "date-time"
        description: "取引期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
      amount:
        type: "integer"
        description: "金額"
      notes:
        type: "string"
        description: "取引説明"
    description: "入金取引開始パラメーター"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      amount: 0
      notes: "notes"
      toAccountNumber: "toAccountNumber"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
  StartWithdrawTransactionParams:
    type: "object"
    properties:
      fromAccountNumber:
        type: "string"
        description: "出金元口座番号"
      expires:
        type: "string"
        format: "date-time"
        description: "取引期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
      amount:
        type: "integer"
        description: "金額"
      notes:
        type: "string"
        description: "取引説明"
    description: "出金取引開始パラメーター"
    example:
      fromAccountNumber: "fromAccountNumber"
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      amount: 0
      notes: "notes"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
  StartTransferTransactionParams:
    type: "object"
    properties:
      fromAccountNumber:
        type: "string"
        description: "転送元口座番号"
      toAccountNumber:
        type: "string"
        description: "転送先口座番号"
      expires:
        type: "string"
        format: "date-time"
        description: "取引期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
      amount:
        type: "integer"
        description: "金額"
      notes:
        type: "string"
        description: "取引説明"
    description: "転送取引開始パラメーター"
    example:
      fromAccountNumber: "fromAccountNumber"
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      amount: 0
      notes: "notes"
      toAccountNumber: "toAccountNumber"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
  DepositTransaction:
    type: "object"
    properties:
      id:
        type: "string"
        description: "取引ID"
      status:
        $ref: "#/definitions/TransactionStatus"
      startDate:
        type: "string"
        format: "date-time"
        description: "開始日時"
      endDate:
        type: "string"
        format: "date-time"
        description: "終了日時"
      expires:
        type: "string"
        format: "date-time"
        description: "確定期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
    description: "入金取引"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      endDate: "2000-01-23T04:56:07.000+00:00"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      id: "id"
      startDate: "2000-01-23T04:56:07.000+00:00"
      status: {}
  WithdrawTransaction:
    type: "object"
    properties:
      id:
        type: "string"
        description: "取引ID"
      status:
        $ref: "#/definitions/TransactionStatus"
      startDate:
        type: "string"
        format: "date-time"
        description: "開始日時"
      endDate:
        type: "string"
        format: "date-time"
        description: "終了日時"
      expires:
        type: "string"
        format: "date-time"
        description: "確定期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
    description: "出金取引"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      endDate: "2000-01-23T04:56:07.000+00:00"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      id: "id"
      startDate: "2000-01-23T04:56:07.000+00:00"
      status: {}
  TransferTransaction:
    type: "object"
    properties:
      id:
        type: "string"
        description: "取引ID"
      status:
        $ref: "#/definitions/TransactionStatus"
      startDate:
        type: "string"
        format: "date-time"
        description: "開始日時"
      endDate:
        type: "string"
        format: "date-time"
        description: "終了日時"
      expires:
        type: "string"
        format: "date-time"
        description: "確定期限"
      agent:
        $ref: "#/definitions/TransactionAgent"
      recipient:
        $ref: "#/definitions/TransactionRecipient"
    description: "転送取引"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      agent:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      endDate: "2000-01-23T04:56:07.000+00:00"
      recipient:
        name: "name"
        id: "id"
        typeOf: "typeOf"
        url: "url"
      id: "id"
      startDate: "2000-01-23T04:56:07.000+00:00"
      status: {}
  MoneyTransferAction:
    type: "object"
    properties:
      id:
        type: "string"
        description: "取引ID"
      status:
        type: "string"
        description: "取引ID"
      startDate:
        type: "string"
        format: "date-time"
        description: "開始日時"
      endDate:
        type: "string"
        format: "date-time"
        description: "終了日時"
      purpose:
        type: "object"
        description: "取引"
        properties: {}
      amount:
        type: "integer"
        description: "金額"
      fromLocation:
        $ref: "#/definitions/MoneyTransferAction_fromLocation"
      toLocation:
        $ref: "#/definitions/MoneyTransferAction_toLocation"
    description: "転送アクション"
    example:
      amount: 0
      endDate: "2000-01-23T04:56:07.000+00:00"
      purpose: "{}"
      id: "id"
      fromLocation:
        name: "name"
        accountNumber: "accountNumber"
        typeOf: "typeOf"
      toLocation:
        name: "name"
        accountNumber: "accountNumber"
        typeOf: "typeOf"
      startDate: "2000-01-23T04:56:07.000+00:00"
      status: "status"
  MoneyTransferAction_fromLocation:
    properties:
      typeOf:
        type: "string"
        description: "口座タイプ"
      accountNumber:
        type: "string"
        description: "口座番号"
      name:
        type: "string"
        description: "名前"
    description: "転送元"
    example:
      name: "name"
      accountNumber: "accountNumber"
      typeOf: "typeOf"
  MoneyTransferAction_toLocation:
    properties:
      typeOf:
        type: "string"
        description: "口座タイプ"
      accountNumber:
        type: "string"
        description: "口座番号"
      name:
        type: "string"
        description: "名前"
    description: "転送先"
    example:
      name: "name"
      accountNumber: "accountNumber"
      typeOf: "typeOf"
